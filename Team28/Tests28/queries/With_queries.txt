1 - with clauses with procedure.procName
procedure p; 
Select p with p.procName = "call"
call
5000
2 - select stmt#, call.procName in with clause
call c;
Select c.stmt# with c.procName = "call"
27
5000
3 - 2 with clauses
procedure p; call c;
Select <p.procName, c> with c.procName = "call" with p.procName = "main"
main 27
5000
3 - 2 with clauses connect by and
procedure p; call c;
Select <p.procName, c> with c.procName = "call" and p.procName = "main"
main 27
5000
4 - 2 with clauses one not exist select tuple
procedure p; call c;
Select <p.procName, c.stmt#> with c.procName = "main" and p.procName = "main"

5000
5 - 2 with clauses one not exist select procedure
procedure p; call c;
Select p.procName with p.procName = "call" and c.procName = "main"

5000
6 - selected synonym not in with clause
procedure p; call c;
Select p.procName with c.procName = "call"
call, main
5000
7 - invalid query: select procName of statement
read r;
Select r.procName
SemanticError
5000
8 - invalid query: constraint procName of variable and constant in with clause
constant c; variable v;
Select c with c.procName = "main" and v.procName = "call"
SemanticError
5000
9 - variable.varName in with clause
variable v;
Select v with v.varName = "a18"
a18
5000
10 - print/read.varName in with and select clUause
print p; read r;
Select <p.varName, r.stmt#> with r.varName = "read" 
a17 5,a21 5,a27 5,a28 5,a7 5,call 5,constant 5
5000
11 - invalid query: assignment.varName
assign a;
Select a with a.stmt# = 12 with a.varName = "a1"
SemanticError
5000
12 - invalid query: print/call varName in select clause
print p; call c;
Select <p.varName, c.varName>
SemanticError
5000
13 - invalid query: procedure varName in select clause; no such procedure exist
procedure p;
Select p.varName such that Calls*(p, "main")
SemanticError
5000
14 - invalid query: constant.varName
constant c;
Select c with c.varName = 1
SemanticError
5000
15 - constant.value
constant c;
Select c.value
44, 1, 5, 10, 11, 0
5000
16 - Select constant.value (1 pattern, 1 with, 1 such that)
if ifs; variable v; stmt s;
Select s pattern ifs(v, _, _) with ifs.stmt# = 6 such that Uses(s, v)
6, 7
5000
17 - different order (1 with, 1 pattern, 1 such that)
if ifs; variable v; stmt s;
Select s with ifs.stmt# = 6 pattern ifs(v, _, _) such that Uses(s, v)
6, 7
5000
18 - different order (1 pattern, 1 such that, 1 with)
if ifs; variable v; stmt s;
Select s  pattern ifs(v, _, _) such that Uses(s, v) with ifs.stmt# = 6
6, 7
5000
19 - invalid query: variable.value
variable v;
Select variable.value
SemanticError
5000
20 - invalid query: procedure.value in with clause
procedure p;
Select p with p.value = "main"
SemanticError
5000
21 - statement.stmt# in with clause, 3 with clauses
print p; assign r; call c;
Select <p, r> with c.procName = "call" with p.varName = "constant" and r.stmt# = 1
4 1
5000
22 - 3 with clauses, 1 not exists
print p; read r; call c;
Select <p, r> with c.procName = "call" with p.varName = "constant" and r.stmt# = 2

5000
23 - 1 with, 2 such that
if ifs; while w; stmt s;
Select <w,s.stmt#> such that Uses(s, "print") with ifs.stmt# = 15 such that Parent*(ifs, w) 
21 1, 22 1
5000
24 - 2 with, 1 such that
if ifs; print p;
Select p.stmt# with p.varName = "a17"  such that Parent(ifs, p) with ifs.stmt# = 17
18
5000
25 - 1 with, 1 pattern
while w; variable v;
Select w.stmt# pattern w(v, _) with v.varName = "a24"
22
5000
26 - 1 with 2 pattern
if ifs; while w; variable v;
Select <w.stmt#, ifs.stmt#> pattern w(v, _) and ifs(v, _, _) with v.varName = "a4" 
8 29
5000
27 - attribute with extra space
print p; assign r; call c;
Select <p,r> with c.procName = "call		" with p.varName = "       constant " and r.stmt# = 1
4 1
5000
28 - with in wrong clause
assign a; variable v;
Select a pattern a(v, _) and variable.varName = "a2"
SyntaxError
5000
29 - invalid query: wrong procedure value type
procedure p;
Select p with p.procName = 1
SemanticError
5000
30 - invalid query: wrong varName value type
variable v;
Select v with v.varName = 80
SemanticError
5000
31 - invalid query: wrong stmt# value type
stmt s;
Select s with s.stmt# = "main"
SemanticError
5000
32 - invalid query: wrong constant.value value type
constant c;
Select c with c.value = "call"
SemanticError
5000
33 - invalid query: invalid name for varName
variable v;
Select v with v.varName = "1main"
SyntaxError
5000
34 - invalid query: number with leading 0
constant c;
Select c with c.value = 012
SyntaxError
5000
35 - reflective query: procName
procedure p; call c;
Select <p, c.procName> with "call" = p.procName and "call" = c.procName
call call 
5000
36 - reflective query: varName and stmt#
read r; variable v; print p;
Select v with 5 = r.stmt# and "read" = r.varName with "read" = v.varName with "constant" = p.varName and 4 = p.stmt#
read
5000
37 - reflective query: constant.value
constant c, c1;
Select c1 with 12456 = c.value and c1.value = 1

5000
38 - invalid reflective query: wrong type for constant value
constant c;
Select c with "call" = c.value
SemanticError
5000
39 - invalid reflective query: wrong type for wrong varName
variable v;
Select v with 80 = v.varName
SemanticError
5000
40 - invalid reflective query: invalid name for varName
variable v;
Select v with "1main" = v.varName
SyntaxError
5000
